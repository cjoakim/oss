var search_data = {"index":{"searchIndex":["float","m26","age","agegrade","constants","distance","elapsedtime","speed","ultra","age_graded()","approximate?()","as_hhmmss()","as_hours()","average_pace_per_mile()","calculate()","calculate_average_speed()","calculate_maxpulse()","dob_mm_dd()","from_pace_per_mile()","get_kilometers()","get_kph()","get_miles()","get_mph()","get_yards()","get_yph()","initialize_leap_years()","leap_year?()","leap_years()","leap_years()","max_pulse()","maxpulse()","maxpulse1()","maxpulse2()","mile()","new()","new()","new()","new()","new()","new()","next_birthday()","pace_per_mile()","prev_birthday()","print_string()","print_string()","projected_time()","projected_times()","seconds_per_mile()","subtract()","subtract()","to_f()","to_s()","to_s()","to_s()","to_s()","valid?()","readme"],"longSearchIndex":["float","m26","m26::age","m26::agegrade","m26::constants","m26::distance","m26::elapsedtime","m26::speed","m26::ultra","m26::speed#age_graded()","float#approximate?()","m26::elapsedtime#as_hhmmss()","m26::elapsedtime#as_hours()","m26::ultra#average_pace_per_mile()","m26::agegrade#calculate()","m26::speed::calculate_average_speed()","m26::agegrade#calculate_maxpulse()","m26::age#dob_mm_dd()","m26::speed::from_pace_per_mile()","m26::distance#get_kilometers()","m26::speed#get_kph()","m26::distance#get_miles()","m26::speed#get_mph()","m26::distance#get_yards()","m26::speed#get_yph()","m26::age#initialize_leap_years()","m26::age#leap_year?()","m26::age::leap_years()","m26::age#leap_years()","m26::age#max_pulse()","m26::agegrade#maxpulse()","m26::agegrade#maxpulse1()","m26::agegrade#maxpulse2()","m26::ultra#mile()","m26::age::new()","m26::agegrade::new()","m26::distance::new()","m26::elapsedtime::new()","m26::speed::new()","m26::ultra::new()","m26::age#next_birthday()","m26::speed#pace_per_mile()","m26::age#prev_birthday()","m26::distance#print_string()","m26::elapsedtime#print_string()","m26::speed#projected_time()","m26::speed#projected_times()","m26::speed#seconds_per_mile()","m26::distance#subtract()","m26::elapsedtime#subtract()","m26::age#to_f()","m26::age#to_s()","m26::distance#to_s()","m26::elapsedtime#to_s()","m26::speed#to_s()","m26::distance#valid?()",""],"info":[["Float","","Float.html","","<p>Copyright (C) 2014 Chris Joakim, JoakimSoftware LLC\n"],["M26","","M26.html","","<p>Copyright (C) 2014 Chris Joakim, JoakimSoftware LLC\n<p>Copyright (C) 2014 Chris Joakim, JoakimSoftware LLC …\n"],["M26::Age","","M26/Age.html","",""],["M26::AgeGrade","","M26/AgeGrade.html","",""],["M26::Constants","","M26/Constants.html","",""],["M26::Distance","","M26/Distance.html","",""],["M26::ElapsedTime","","M26/ElapsedTime.html","",""],["M26::Speed","","M26/Speed.html","",""],["M26::Ultra","","M26/Ultra.html","",""],["age_graded","M26::Speed","M26/Speed.html#method-i-age_graded","(dob, event_yyyy_mm_dd, base_yyyy_mm_dd)",""],["approximate?","Float","Float.html#method-i-approximate-3F","(val, tolerance=0.0001)",""],["as_hhmmss","M26::ElapsedTime","M26/ElapsedTime.html#method-i-as_hhmmss","(ss_fractional_digits=2)",""],["as_hours","M26::ElapsedTime","M26/ElapsedTime.html#method-i-as_hours","()",""],["average_pace_per_mile","M26::Ultra","M26/Ultra.html#method-i-average_pace_per_mile","()",""],["calculate","M26::AgeGrade","M26/AgeGrade.html#method-i-calculate","(elapsed_time, formula='maxpulse')",""],["calculate_average_speed","M26::Speed","M26/Speed.html#method-c-calculate_average_speed","(s1, s2, t1, t2)",""],["calculate_maxpulse","M26::AgeGrade","M26/AgeGrade.html#method-i-calculate_maxpulse","(elapsed_time)",""],["dob_mm_dd","M26::Age","M26/Age.html#method-i-dob_mm_dd","()",""],["from_pace_per_mile","M26::Speed","M26/Speed.html#method-c-from_pace_per_mile","(ppm)",""],["get_kilometers","M26::Distance","M26/Distance.html#method-i-get_kilometers","()",""],["get_kph","M26::Speed","M26/Speed.html#method-i-get_kph","()",""],["get_miles","M26::Distance","M26/Distance.html#method-i-get_miles","()",""],["get_mph","M26::Speed","M26/Speed.html#method-i-get_mph","()",""],["get_yards","M26::Distance","M26/Distance.html#method-i-get_yards","()",""],["get_yph","M26::Speed","M26/Speed.html#method-i-get_yph","()",""],["initialize_leap_years","M26::Age","M26/Age.html#method-i-initialize_leap_years","()",""],["leap_year?","M26::Age","M26/Age.html#method-i-leap_year-3F","(y)",""],["leap_years","M26::Age","M26/Age.html#method-c-leap_years","()",""],["leap_years","M26::Age","M26/Age.html#method-i-leap_years","()","<p>TODO - move these two methods down\n"],["max_pulse","M26::Age","M26/Age.html#method-i-max_pulse","()",""],["maxpulse","M26::AgeGrade","M26/AgeGrade.html#method-i-maxpulse","(age)",""],["maxpulse1","M26::AgeGrade","M26/AgeGrade.html#method-i-maxpulse1","()",""],["maxpulse2","M26::AgeGrade","M26/AgeGrade.html#method-i-maxpulse2","()",""],["mile","M26::Ultra","M26/Ultra.html#method-i-mile","()",""],["new","M26::Age","M26/Age.html#method-c-new","(birth_yyyy_mm_dd, as_of_yyyy_mm_dd)",""],["new","M26::AgeGrade","M26/AgeGrade.html#method-c-new","(a1, a2)",""],["new","M26::Distance","M26/Distance.html#method-c-new","(v, um=UOM_MILES)",""],["new","M26::ElapsedTime","M26/ElapsedTime.html#method-c-new","(raw_val)",""],["new","M26::Speed","M26/Speed.html#method-c-new","(dist, et)",""],["new","M26::Ultra","M26/Ultra.html#method-c-new","(rp, rt, wp, wt, sth=nil, debug=false)",""],["next_birthday","M26::Age","M26/Age.html#method-i-next_birthday","()",""],["pace_per_mile","M26::Speed","M26/Speed.html#method-i-pace_per_mile","()",""],["prev_birthday","M26::Age","M26/Age.html#method-i-prev_birthday","()",""],["print_string","M26::Distance","M26/Distance.html#method-i-print_string","()",""],["print_string","M26::ElapsedTime","M26/ElapsedTime.html#method-i-print_string","()",""],["projected_time","M26::Speed","M26/Speed.html#method-i-projected_time","(another_distance, algorithm='simple', pow=1.06, debug=false)",""],["projected_times","M26::Speed","M26/Speed.html#method-i-projected_times","(space_delim_distances)",""],["seconds_per_mile","M26::Speed","M26/Speed.html#method-i-seconds_per_mile","()",""],["subtract","M26::Distance","M26/Distance.html#method-i-subtract","(another_instance)",""],["subtract","M26::ElapsedTime","M26/ElapsedTime.html#method-i-subtract","(another_instance)",""],["to_f","M26::Age","M26/Age.html#method-i-to_f","()",""],["to_s","M26::Age","M26/Age.html#method-i-to_s","()",""],["to_s","M26::Distance","M26/Distance.html#method-i-to_s","()",""],["to_s","M26::ElapsedTime","M26/ElapsedTime.html#method-i-to_s","()",""],["to_s","M26::Speed","M26/Speed.html#method-i-to_s","()",""],["valid?","M26::Distance","M26/Distance.html#method-i-valid-3F","()",""],["README","","README_rdoc.html","","<p>M26\n<p>version 1.0.1, released 2014-10-17\n<p>A ruby gem for running, cycling, and swimming calculations - pace, …\n"]]}}